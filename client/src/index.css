@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap');
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css');

/* stylelint-disable at-rule-no-unknown */
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Tema chiaro (default) */
    --background: 0 0% 100%;
    --foreground: 224 71.4% 4.1%;
    --card: 0 0% 100%;
    --card-foreground: 224 71.4% 4.1%;
    --popover: 0 0% 100%;
    --popover-foreground: 224 71.4% 4.1%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 0 0% 100%;
    --secondary: 210 16% 93%;
    --secondary-foreground: 224 71.4% 4.1%;
    --muted: 210 16% 93%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 210 16% 93%;
    --accent-foreground: 224 71.4% 4.1%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;
    --border: 215 20.2% 65.1%;
    --input: 215 20.2% 65.1%;
    --ring: 217.2 91.2% 59.8%;
    --radius: 0.75rem;
  }

  html.dark {
    /* Tema scuro */
    --background: 224 71.4% 4.1%;
    --foreground: 210 20% 98%;
    --card: 224 71.4% 4.1%;
    --card-foreground: 210 20% 98%;
    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 20% 98%;
    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;
    --accent: 215 27.9% 16.9%;
    --accent-foreground: 210 20% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;
    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 224.3 76.3% 48%;
    --radius: 0.75rem;
  }

  /* When explicit 'light' class is present on <html>, map dark utility classes to light equivalents
     by using the color variables already defined in :root. This covers both normal classes and
     Tailwind opacity variants (e.g. bg-dark-light/80) via attribute selectors. */
  html.light body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }

  html.light .bg-dark {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }

  html.light .bg-dark-light {
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
  }

  html.light .bg-dark-lighter {
    background-color: hsl(var(--popover));
    color: hsl(var(--popover-foreground));
  }

  html.light .border-dark-lighter {
    border-color: hsl(var(--border));
  }

  /* remap commonly used gray text classes to darker text on light theme */
  html.light .text-gray-100 { color: hsl(var(--foreground)); }
  html.light .text-gray-200 { color: hsl(var(--muted-foreground)); }
  html.light .text-gray-300 { color: hsl(var(--muted-foreground)); }

  /* attribute selectors to cover opacity variant classes generated by Tailwind (like bg-dark-light/80) */
  html.light [class*="bg-dark-light/"] {
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
  }

  html.light [class*="bg-dark/"] {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }


  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  /* Autofill fix per input scuri (login/register) */
  input.auth-input:-webkit-autofill,
  input.auth-input:-webkit-autofill:hover,
  input.auth-input:-webkit-autofill:focus,
  textarea.auth-input:-webkit-autofill,
  select.auth-input:-webkit-autofill {
    -webkit-text-fill-color: #fff !important;
    transition: background-color 9999s ease-in-out 0s !important; /* rimuove lo sfondo giallino di Chrome */
    caret-color: #fff !important;
  }

  /* Forza font-color su Firefox e altri */
  input.auth-input, textarea.auth-input, select.auth-input {
    color: #fff !important;
    background-color: transparent !important;
  }

  /* Etichette floating: se il browser compila automaticamente, considera valid per far salire la label */
  .auth-input:-webkit-autofill ~ label {
    top: -5px !important;
    transform: translateY(0) !important;
    font-size: 0.875rem !important; /* text-sm */
    color: rgb(234 88 12) !important; /* orange-600 */
  }

  /* Keep default browser scrollbars visible; use .scrollbar-hide on elements that must hide them */

  *:focus {
    outline: none !important;
    box-shadow: none !important;
  }

  .text-success {
    @apply text-green-500;
  }
  .bg-success {
    @apply bg-green-500;
  }
  .text-warning {
    @apply text-amber-500;
  }
  .bg-warning {
    @apply bg-amber-500;
  }
  .text-danger {
    @apply text-red-500;
  }
  .bg-danger {
    @apply bg-red-500;
  }
  .bg-dark {
    @apply bg-gray-900;
  }
  .bg-dark-light {
    @apply bg-gray-800;
  }
  .bg-dark-lighter {
    @apply bg-gray-700;
  }
  .border-dark-lighter {
    @apply border-gray-700;
  }

  @media (hover: none), (pointer: coarse) {
    * {
      cursor: auto !important;
    }
    
    html:has(#cursor) * {
      cursor: auto !important;
    }

    a, button, [role="button"], input[type="submit"], select {
      cursor: pointer !important;
    }

    button, a, [role="button"], select, input[type="submit"] {
      cursor: pointer !important;
    }
    
    #cursor {
      display: none !important;
    }
  }

  /* Nasconde sempre il cursore personalizzato sui dispositivi touch */
  @media (hover: none) and (pointer: coarse) {
    * {
      cursor: auto !important;
    }
    
    html:has(#cursor) * {
      cursor: auto !important;
    }

    a, button, [role="button"], input[type="submit"], select {
      cursor: pointer !important;
    }

    button, a, [role="button"], select, input[type="submit"] {
      cursor: pointer !important;
    }
    
    #cursor {
      display: none !important;
      visibility: hidden !important;
      opacity: 0 !important;
    }
  }

  /* Fallback per schermi piccoli (dispositivi mobili) */
  @media (max-width: 768px) {
    * {
      cursor: auto !important;
    }
    
    html:has(#cursor) * {
      cursor: auto !important;
    }

    a, button, [role="button"], input[type="submit"], select {
      cursor: pointer !important;
    }

    button, a, [role="button"], select, input[type="submit"] {
      cursor: pointer !important;
    }
    
    #cursor {
      display: none !important;
    }
  }

  @media (hover: hover) {
    * {
      cursor: none !important;
    }

    html:has(#cursor) * {
      cursor: none !important;
    }

    html, body, #root {
      cursor: none !important;
    }

    #cursor {
      width: 20px;
      height: 20px;
      background: transparent;
      border: 1.5px solid rgba(255, 255, 255, 0.8);
      border-radius: 50%;
      position: fixed;
      pointer-events: none;
      z-index: 9999;
      mix-blend-mode: difference;
      
      /* Ultra-ottimizzazioni performance per rendering GPU-accelerato */
      will-change: transform;
      transform-origin: center;
      backface-visibility: hidden;
      contain: layout style paint;
      isolation: isolate;
      
      /* Transizioni ultra-rapide per responsività Windows-like */
      transition: width 0.05s ease-out,
                  height 0.05s ease-out,
                  border 0.05s ease-out,
                  background 0.05s ease-out;
      
      /* Force compositing layer per eliminare repaints */
      transform: translate3d(-50%, -50%, 0);
      opacity: 1;
      
      /* Performance boost per layer management */
      content-visibility: auto;
      contain-intrinsic-size: 20px 20px;
    }

    /* Durante la selezione di testo, mantieni visibilità ma riduci opacità */
    #cursor.selecting {
      opacity: 0.6 !important;
      transition: opacity 0.05s ease-out;
      background: rgba(255, 255, 255, 0.1);
      border: 1.5px solid rgba(255, 255, 255, 0.6);
      /* Performance optimization per selection state */
      contain: layout style paint;
      will-change: opacity;
    }

    /* Quando l'utente sta selezionando testo */
    ::-moz-selection {
      background: rgba(255, 255, 255, 0.2);
    }
    ::selection {
      background: rgba(255, 255, 255, 0.2);
    }

    #cursor.hover {
      width: 32px;
      height: 32px;
      border: 1.5px solid rgba(255, 255, 255, 1);
      background: rgba(255, 255, 255, 0.08);
      
      /* Ultra-fast hover transition per responsività Windows-like */
      transition: width 0.05s ease-out, 
                  height 0.05s ease-out, 
                  border 0.05s ease-out, 
                  background 0.05s ease-out,
                  box-shadow 0.05s ease-out;
      
      /* Enhanced visibility con performance optimization */
      box-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
      
      /* Performance boost per hover state */
      contain: layout style paint;
      will-change: width, height, border, background, box-shadow;
      contain-intrinsic-size: 32px 32px;
    }

    #cursor.clicking {
      transform: translate3d(-50%, -50%, 0) scale(0.9);
      transition: transform 0.05s ease-out;
      /* Performance optimization per click state */
      contain: layout style paint;
      will-change: transform;
    }

    #cursor.hidden {
      opacity: 0;
      transition: opacity 0.05s ease-out;
      pointer-events: none;
      /* Performance optimization per hidden state */
      contain: layout style paint;
      will-change: opacity;
      visibility: hidden;
    }

    /* Ottimizzazione per ridurre il layout shift e migliorare performance */
    #cursor::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 4px;
      height: 4px;
      background: rgba(255, 255, 255, 0.6);
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: opacity 0.2s ease;
      opacity: 0;
      /* Performance optimization per pseudo-element */
      contain: layout style paint;
      will-change: opacity;
    }

    #cursor.hover::before {
      opacity: 1;
      transition: opacity 0.05s ease-out;
      /* Performance boost per hover pseudo-element */
      contain: layout style paint;
      will-change: opacity;
    }

    /* Animazione per il bottone impostazioni */
    .settings-button-icon {
      transform-origin: center;
      will-change: transform;
    }

    /* Animazione typing per la ricerca - esegue solo una volta */
    .typing-animation::after {
      content: '';
      animation: none;
    }

    @keyframes typing {
      0% { content: ''; }
      5% { content: 'S'; }
      10% { content: 'Se'; }
      15% { content: 'Sea'; }
      20% { content: 'Sear'; }
      25% { content: 'Searc'; }
      30% { content: 'Search'; }
      35% { content: 'Search '; }
      40% { content: 'Search s'; }
      45% { content: 'Search se'; }
      50% { content: 'Search ser'; }
      55% { content: 'Search serv'; }
      60% { content: 'Search servi'; }
      65% { content: 'Search servic'; }
      70% { content: 'Search service'; }
      75% { content: 'Search services'; }
      80% { content: 'Search services'; }
      85% { content: 'Search services'; }
      90% { content: 'Search services'; }
      100% { content: 'Search services'; }
    }

    /* Classe per attivare l'animazione */
    .typing-animation.animate::after {
      animation: typing 2s steps(40) forwards;
    }

    /* Reset dell'animazione */
    .typing-animation.reset::after {
      content: '';
      animation: none;
    }

    /* Hide native vertical scrollbar on desktop; prefer top progress bar as indicator */
    html, body {
      -ms-overflow-style: none; /* IE 10+ */
      scrollbar-width: none; /* Firefox */
    }
    html::-webkit-scrollbar, body::-webkit-scrollbar {
      display: none; /* Chrome, Safari, Opera */
    }
  }
}

@layer utilities {
  /* Hide scrollbar but keep functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }
}
