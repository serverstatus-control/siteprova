@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500&display=swap');
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css');

/* stylelint-disable at-rule-no-unknown */
@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Tema chiaro (default) */
    --background: 0 0% 100%;
    --foreground: 224 71.4% 4.1%;
    --card: 0 0% 100%;
    --card-foreground: 224 71.4% 4.1%;
    --popover: 0 0% 100%;
    --popover-foreground: 224 71.4% 4.1%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 0 0% 100%;
    --secondary: 210 16% 93%;
    --secondary-foreground: 224 71.4% 4.1%;
    --muted: 210 16% 93%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 210 16% 93%;
    --accent-foreground: 224 71.4% 4.1%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;
    --border: 215 20.2% 65.1%;
    --input: 215 20.2% 65.1%;
    --ring: 217.2 91.2% 59.8%;
    --radius: 0.75rem;
  }

  html.dark {
    /* Tema scuro */
    --background: 224 71.4% 4.1%;
    --foreground: 210 20% 98%;
    --card: 224 71.4% 4.1%;
    --card-foreground: 210 20% 98%;
    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 20% 98%;
    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;
    --accent: 215 27.9% 16.9%;
    --accent-foreground: 210 20% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;
    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 224.3 76.3% 48%;
    --radius: 0.75rem;
  }

  /* When explicit 'light' class is present on <html>, map dark utility classes to light equivalents
     by using the color variables already defined in :root. This covers both normal classes and
     Tailwind opacity variants (e.g. bg-dark-light/80) via attribute selectors. */
  html.light body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }

  html.light .bg-dark {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }

  html.light .bg-dark-light {
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
  }

  html.light .bg-dark-lighter {
    background-color: hsl(var(--popover));
    color: hsl(var(--popover-foreground));
  }

  html.light .border-dark-lighter {
    border-color: hsl(var(--border));
  }

  /* remap commonly used gray text classes to darker text on light theme */
  html.light .text-gray-100 { color: hsl(var(--foreground)); }
  html.light .text-gray-200 { color: hsl(var(--muted-foreground)); }
  html.light .text-gray-300 { color: hsl(var(--muted-foreground)); }

  /* attribute selectors to cover opacity variant classes generated by Tailwind (like bg-dark-light/80) */
  html.light [class*="bg-dark-light/"] {
    background-color: hsl(var(--card));
    color: hsl(var(--card-foreground));
  }

  html.light [class*="bg-dark/"] {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
  }


  body {
    @apply font-sans antialiased bg-background text-foreground;
  }

  /* Keep default browser scrollbars visible; use .scrollbar-hide on elements that must hide them */

  *:focus {
    outline: none !important;
    box-shadow: none !important;
  }

  .text-success {
    @apply text-green-500;
  }
  .bg-success {
    @apply bg-green-500;
  }
  .text-warning {
    @apply text-amber-500;
  }
  .bg-warning {
    @apply bg-amber-500;
  }
  .text-danger {
    @apply text-red-500;
  }
  .bg-danger {
    @apply bg-red-500;
  }
  .bg-dark {
    @apply bg-gray-900;
  }
  .bg-dark-light {
    @apply bg-gray-800;
  }
  .bg-dark-lighter {
    @apply bg-gray-700;
  }
  .border-dark-lighter {
    @apply border-gray-700;
  }

  @media (hover: none), (pointer: coarse) {
    * {
      cursor: auto !important;
    }
    
    html:has(#cursor) * {
      cursor: auto !important;
    }

    a, button, [role="button"], input[type="submit"], select {
      cursor: pointer !important;
    }

    button, a, [role="button"], select, input[type="submit"] {
      cursor: pointer !important;
    }
    
    #cursor {
      display: none !important;
    }
  }

  @media (hover: hover) {
    * {
  @apply border-border;
  cursor: none !important;
    }

    html:has(#cursor) * {
      cursor: none !important;
    }

    html, body, #root {
      cursor: none !important;
    }

    #cursor {
      width: 20px;
      height: 20px;
      background: transparent;
      border: 1.5px solid rgba(255, 255, 255, 0.8);
      border-radius: 50%;
      position: fixed;
      pointer-events: none;
      z-index: 9999;
      mix-blend-mode: difference;
      transform: translate(-50%, -50%);
      transition: all 0.15s ease;
      transition-property: width, height, border, transform, opacity;
      will-change: transform, opacity;
      opacity: 1;
    }

    #cursor.hover {
      width: 32px;
      height: 32px;
      border: 1.5px solid rgba(255, 255, 255, 1);
      background: rgba(255, 255, 255, 0.05);
    }

    #cursor.clicking {
      transform: translate(-50%, -50%) scale(0.8);
    }

    #cursor.outside,
    #cursor.hidden {
      opacity: 0;
      transition: opacity 0.15s ease-out;
      pointer-events: none;
    }

    /* Hide native vertical scrollbar on desktop; prefer top progress bar as indicator */
    html, body {
      -ms-overflow-style: none; /* IE 10+ */
      scrollbar-width: none; /* Firefox */
    }
    html::-webkit-scrollbar, body::-webkit-scrollbar {
      display: none; /* Chrome, Safari, Opera */
    }
  }
}

@layer utilities {
  /* Hide scrollbar but keep functionality */
  .scrollbar-hide {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
  }
  
  .scrollbar-hide::-webkit-scrollbar {
    display: none; /* Chrome, Safari and Opera */
  }
}
