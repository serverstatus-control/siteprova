{"version":3,"file":"forgot-password-BCEEEBEC.js","sources":["../../../src/pages/forgot-password.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'wouter';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card';\r\n\r\nexport default function ForgotPasswordPage() {\r\n  const [_, navigate] = useLocation();\r\n  const [email, setEmail] = useState('');\r\n  const [message, setMessage] = useState<string | null>(null);\r\n  const [devResetUrl, setDevResetUrl] = useState<string | null>(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const submit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setMessage(null);\r\n    try {\r\n      const res = await fetch('/api/forgot-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ email })\r\n      });\r\n      const json = await res.json().catch(() => ({}));\r\n      setMessage(json?.message || 'Se l\\'email Ã¨ registrata, riceverai istruzioni per il reset.');\r\n      // In development, the server may return the token and a resetUrl per testare senza email\r\n      if (json?.resetUrl && import.meta.env.DEV) {\r\n        setDevResetUrl(json.resetUrl);\r\n      }\r\n      if (json?.token && import.meta.env.DEV) {\r\n        setMessage((prev) => `${prev}\\nToken di test: ${json.token}`);\r\n      }\r\n    } catch (err) {\r\n      setMessage('Errore di rete');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-background p-4\">\r\n      <div className=\"w-full max-w-sm\">\r\n        <Card className=\"border-border/40 shadow-lg\">\r\n          <CardHeader className=\"space-y-3\">\r\n            <CardTitle className=\"text-2xl text-center font-semibold\">Recupero Password</CardTitle>\r\n            <CardDescription className=\"text-center text-muted-foreground\">\r\n              Inserisci la tua email per ricevere il link di reset. Ti invieremo una email con le istruzioni per reimpostare la password.\r\n            </CardDescription>\r\n          </CardHeader>\r\n          <form onSubmit={submit}>\r\n            <CardContent className=\"space-y-4 pt-2\">\r\n              <div className=\"space-y-2\">\r\n                <label className=\"text-sm font-medium text-foreground/90\">Email</label>\r\n                <Input \r\n                  type=\"email\" \r\n                  value={email} \r\n                  onChange={(e) => setEmail((e.target as HTMLInputElement).value)}\r\n                  placeholder=\"La tua email\"\r\n                  className=\"h-10\"\r\n                  required\r\n                />\r\n              </div>\r\n              {message && (\r\n                <div className={`p-3 rounded-md text-sm ${\r\n                  message.includes('error') ? \r\n                    'bg-destructive/10 text-destructive border border-destructive/20' : \r\n                    'bg-muted/50 text-muted-foreground border border-border/50'\r\n                }`}>\r\n                  <pre className=\"whitespace-pre-wrap break-words\">{message}</pre>\r\n                  {devResetUrl && (\r\n                    <div className=\"mt-2 flex items-center gap-2 text-xs\">\r\n                      <a href={devResetUrl} className=\"text-primary hover:underline\" target=\"_blank\" rel=\"noreferrer\">\r\n                        Apri link di reset (dev)\r\n                      </a>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"px-2 py-1 border border-border/50 rounded hover:bg-muted/70\"\r\n                        onClick={() => navigator.clipboard.writeText(devResetUrl)}\r\n                      >\r\n                        Copia link\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n            <CardFooter className=\"flex-col space-y-2\">\r\n              <Button \r\n                type=\"submit\" \r\n                className=\"w-full\" \r\n                disabled={isLoading}\r\n              >\r\n                {isLoading ? (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <i className=\"fas fa-spinner fa-spin\" />\r\n                    <span>Invio in corso...</span>\r\n                  </div>\r\n                ) : (\r\n                  'Invia link di reset'\r\n                )}\r\n              </Button>\r\n              <Button \r\n                variant=\"ghost\" \r\n                type=\"button\" \r\n                onClick={() => navigate('/auth')}\r\n                className=\"w-full\"\r\n              >\r\n                Torna al login\r\n              </Button>\r\n            </CardFooter>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ForgotPasswordPage","_","navigate","useLocation","email","setEmail","useState","message","setMessage","devResetUrl","setDevResetUrl","isLoading","setIsLoading","className","children","jsx","jsxs","Card","CardHeader","CardTitle","CardDescription","onSubmit","async","e","preventDefault","res","fetch","method","headers","credentials","body","JSON","stringify","json","catch","err","CardContent","Input","type","value","onChange","target","placeholder","required","includes","href","rel","onClick","navigator","clipboard","writeText","CardFooter","Button","disabled","variant"],"mappings":"iTAMA,SAAwBA,IACtB,MAAOC,EAAGC,GAAYC,KACfC,EAAOC,GAAYC,EAAAA,SAAS,KAC5BC,EAASC,GAAcF,EAAAA,SAAwB,OAC/CG,EAAaC,GAAkBJ,EAAAA,SAAwB,OACvDK,EAAWC,GAAgBN,EAAAA,UAAS,GA6B3C,aACG,MAAA,CAAIO,UAAU,kEACbC,SAAAC,EAAAA,IAAC,MAAA,CAAIF,UAAU,kBACbC,SAAAE,EAAAA,KAACC,EAAA,CAAKJ,UAAU,6BACdC,SAAA,CAAAE,EAAAA,KAACE,EAAA,CAAWL,UAAU,YACpBC,SAAA,OAACK,EAAA,CAAUN,UAAU,qCAAqCC,SAAA,4BACzDM,EAAA,CAAgBP,UAAU,oCAAoCC,SAAA,mIAIjEE,EAAAA,KAAC,OAAA,CAAKK,SArCCC,MAAOC,IACpBA,EAAEC,iBACFZ,GAAa,GACbJ,EAAW,MACX,IACE,MAAMiB,QAAYC,MAAM,uBAAwB,CAC9CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,YAAa,UACbC,KAAMC,KAAKC,UAAU,CAAE5B,YAEnB6B,QAAaR,EAAIQ,OAAOC,MAAM,KAAA,CAAQ,IAC5C1B,EAAWyB,GAAM1B,SAAW,8DAQ9B,OAAS4B,GACP3B,EAAW,iBACb,CAAA,QACEI,GAAa,EACf,GAcQE,SAAA,CAAAE,EAAAA,KAACoB,EAAA,CAAYvB,UAAU,iBACrBC,SAAA,CAAAE,EAAAA,KAAC,MAAA,CAAIH,UAAU,YACbC,SAAA,OAAC,QAAA,CAAMD,UAAU,yCAAyCC,SAAA,UAC1DC,EAAAA,IAACsB,EAAA,CACCC,KAAK,QACLC,MAAOnC,EACPoC,SAAWjB,GAAMlB,EAAUkB,EAAEkB,OAA4BF,OACzDG,YAAY,eACZ7B,UAAU,OACV8B,UAAQ,OAGXpC,GACCS,EAAAA,KAAC,MAAA,CAAIH,UAAW,2BACdN,EAAQqC,SAAS,SACf,kEACA,6DAEF9B,SAAA,OAAC,MAAA,CAAID,UAAU,kCAAmCC,SAAAP,IACjDE,GACCO,EAAAA,KAAC,MAAA,CAAIH,UAAU,uCACbC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAE8B,KAAMpC,EAAaI,UAAU,+BAA+B4B,OAAO,SAASK,IAAI,aAAahC,SAAA,6BAGhGC,EAAAA,IAAC,SAAA,CACCuB,KAAK,SACLzB,UAAU,8DACVkC,QAAS,IAAMC,UAAUC,UAAUC,UAAUzC,GAC9CK,SAAA,wBAQXE,EAAAA,KAACmC,EAAA,CAAWtC,UAAU,qBACpBC,SAAA,CAAAC,EAAAA,IAACqC,EAAA,CACCd,KAAK,SACLzB,UAAU,SACVwC,SAAU1C,EAETG,SAAAH,EACCK,OAAC,MAAA,CAAIH,UAAU,0BACbC,SAAA,CAAAC,EAAAA,IAAC,IAAA,CAAEF,UAAU,2BACbE,EAAAA,IAAC,QAAKD,SAAA,yBAGR,wBAGJC,EAAAA,IAACqC,EAAA,CACCE,QAAQ,QACRhB,KAAK,SACLS,QAAS,IAAM7C,EAAS,SACxBW,UAAU,SACXC,SAAA,+BASf"}