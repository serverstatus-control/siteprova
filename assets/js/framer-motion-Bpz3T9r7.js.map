{"version":3,"file":"framer-motion-Bpz3T9r7.js","sources":["../../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","set","MotionContext","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","motionComponentSymbol","Symbol","for","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","onMount","mount","unmount","current","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","getValueState","values","getVelocity","resolveVariantFromProps","definition","custom","velocity","isKeyframesTarget","resolveFinalValueInKeyframes","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","array","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","element","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","e","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","positionalKeys","clearTime","time","newTime","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","isNone","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isGenerator","isNotNull","getFinalKeyframe","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","flatten","ease","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","millisecondsToSeconds","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","secondsToMilliseconds","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","done","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","generator","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","calcGeneratorDuration","maxGeneratorDuration","generateLinearEasing","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","easingDefinitionToFunction","isBezierDefinition","invariant","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","memo","Element","unsupportedEasingFunctions","AcceleratedAnimation","supportsLinearEasing","isWaapiSupportedEasing","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","mapEasingToNativeEasing","iterations","direction","startWaapiAnimation","pendingTimeline","attachTimeline","onfinish","playbackRate","playState","timeline","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","getValueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","GroupPlaybackControls","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animations","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","isPrimaryPointer","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","setDragLock","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","press","endEvent","success","useGlobalTarget","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212]}